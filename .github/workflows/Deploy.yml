# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:   
  release:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
          
      - name: Build
        run: dotnet publish -c Release -o publish

      - name: Get next version
        id: version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Release
        id: create_release  # ID для доступа к outputs
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}  # Использует имя тега (v1.0.0)
          release_name: Release ${{ github.ref_name }}
      
      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./publish/myapp.zip
          asset_name: myapp-main.zip
          asset_content_type: application/zip

  analyze:
    needs: release
    name: analyze
    runs-on: self-hosted

    strategy:
      fail-fast: false
      matrix:
        language: ['csharp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Build with dotnet
      run: |
        dotnet restore
        dotnet build --configuration Release --no-restore

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  test:
    needs: analyze
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the solution
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test Tests/Tests.csproj --logger "trx;logfilename=test-results.trx"
      
      - name: Publish results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Test Results
          path: "**/test-results.trx"
          reporter: dotnet-trx
  
  deploy:
    needs: test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Run command on remote server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          password: ${{secrets.SSH_PASSWORD}}
          port: 22
          script: |
            cd ${{ secrets.PROJECT_FOLDER }};
            git checkout main;
            git pull;
            docker compose down;
            docker compose up --build -d;
            docker system prune --all --force;
